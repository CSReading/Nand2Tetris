// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {

    static Array twoToThe;

    /** Initializes the library. */
    function void init() {
        var int i, t;

        let twoToThe = Array.new(16);
        let i = 0;
        let t = 1;
        while (i < 16) {
            let twoToThe[i] = t;
            let t = t + t;
            let i = i + 1;
        }

        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {

        if (x > 0) {
            return x;
        }

        return -x;
    }

    function boolean bit(int x, int j) {
        return (twoToThe[j] & x) > 0;
    }

    function int correctSign(int x, int y, int res) {

        if ((x < 0 & y > 0) | (x > 0 & y < 0)) {
            let res = -res;
        }

        return res;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int res, shifted, j, xAbs, yAbs;

        let xAbs = Math.abs(x);
        let yAbs = Math.abs(y);
        let shifted = xAbs;
        let res = 0;
        let j = 0;

        while (j < 16) {

            if (Math.bit(yAbs, j)) {                
                let res = res + shifted;    
            }

            let shifted = shifted + shifted;
            let j = j + 1;
        }

        return Math.correctSign(x, y, res);
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int res, xAbs, yAbs;

        if (y = 0) {
            do Sys.error(3);
        }

        let xAbs = Math.abs(x);
        let yAbs = Math.abs(y); 
        
        let res = Math.divideAbs(xAbs, yAbs);

        return Math.correctSign(x, y, res);
    }

    function int divideAbs(int x, int y) {
        var int q;

        if (y > x) {
            return 0;
        }

        let q = Math.divideAbs(x, y + y);
        if ((x - ((q + q) * y)) < y) {
            return q + q;
        }
        
        return q + q + 1;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int left, right, mid, midSq, res;

        let left = 0;
        let right = Math.min(x, 181); // sqrt(2^15 - 1)

        while (left < (right + 1)) {
            let mid = (left + right) / 2;
            let midSq = mid * mid;
            if (midSq > x) {
                let right = mid - 1;
            } else {
                let left = mid + 1;
                let res = mid;
            }
        }

        return res;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        
        if (a > b) {
            return a;
        } else {
            return  b;
        }        
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {

        if (a < b) {
            return a;
        } else {
            return b;
        }
    }
}
