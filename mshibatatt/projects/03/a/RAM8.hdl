// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    Register(in=in, load=a, out=worda);
    Register(in=in, load=b, out=wordb);
    Register(in=in, load=c, out=wordc);
    Register(in=in, load=d, out=wordd);
    Register(in=in, load=e, out=worde);
    Register(in=in, load=f, out=wordf);
    Register(in=in, load=g, out=wordg);
    Register(in=in, load=h, out=wordh);
    Mux8Way16(a=worda, b=wordb, c=wordc, d=wordd,
              e=worde, f=wordf, g=wordg, h=wordh,
              sel=address, out=out);
}